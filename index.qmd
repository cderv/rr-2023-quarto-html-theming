---
title: "Se démarquer avec les thèmes HTML Quarto"
lang: fr
subtitle: Rencontres R 2023
author: "Christophe Dervieux"
institute: "Posit PBC"
date: 06/21/2023
resources: 
  - demo/*.html
format:
  clean-revealjs:
    theme: [default, reveal-style.scss]
    code-line-numbers: false
    slide-number: true
    mermaid-format: png
    preview-links: auto
    multiplex: true
    preload-iframes: true
    controls: true
    controls-layout: edges
revealjs-plugins:
  - attribution
---

# Qu'est-ce que Quarto ?

C'est comme R Markdown non ? 

## Quarto {.smaller}

C'est un nouveau [système de publication scientifique et technique Open-Source]{.hl}, basé sur [Pandoc]{.hl}, pensé et construit sur les [+10 ans d'expérience avec R Markdown]{.hl}

C'est un outil ligne de commande (CLI), non lié à un language en particulier et qui contient tout le nécessaire.

```{.bash filename="Terminal"}
quarto render document.qmd --to html
```


![Illustration de la présentation "Hello, Quarto" par Julia Lowndes et Mine Çetinkaya-Rundel, présentée à la conférence RStudio 2022. Illustré par Allison Horst.](images/horst_quarto_schematic.png){fig-alt="Un schéma représentant la polyvalence de Quarto en matière d'entrée multilingue (par exemple Python, R, Observable, Julia) et de sortie multiformat (par exemple PDF, html, documents Word, et plus encore)." fig-align="center"}

## Quarto unifie + étend R Markdown {.smaller}

::: columns
::: {.column width="49%"}
- Implémentation cohérente de fonctionnalités pour les différents formats de sorties : tabsets, code-folding, syntax highlighting, etc. 
- Des valeurs par défaut plus accessibles et une meilleure prise en charge de l'accessibilité.
:::
::: {.column width="2%"}
:::
::: {.column width="49%"}
- Support de R, Python, Julia, Observable, et plus encore via le moteur Jupyter pour les chunks de code exécutables.
- De nouvelles fonctionnalités pour une meilleure expérience: auto-complétion YAML, informations sur les erreurs de syntaxe YAML, etc.
:::
:::

::: {layout-ncol=2}
![](images/qmd-knitr.jpeg){fig-alt="Un diagramme de la façon dont un .qmd est transformé en formats de sortie via knitr et pandoc"}

![](images/jupyter-alone.jpeg){fig-alt="Un diagramme de la façon dont un .qmd est transformé en formats de sortie via jupyter et pandoc"}
:::

# Personnaliser sa sortie HTML avec Quarto

A propos des fonctionnalités de thèmes 

## Le format HTML

::: columns
::: {.column width="49%"}

```{.yaml}
---
title: "Démo HTML"
format: html
---
```
:::
::: {.column width="1%"}
:::
::: {.column width="50%"}
```{.yaml filename="basique-style.qmd"}
---
title: "Démo HTML personalisée"
format: 
  html:
    css: monstyle.css
---
```
:::
:::

::: {.top-pad .bottom-pad}
* Le thème par défaut est basée sur Bootstrap 5 (variante **bslib**)
* Des choix par défaut améliorés par rapport à R Markdown
* Modifiable avec un simple CSS
:::

::: footer
[CSS](https://quarto.org/docs/output-formats/html-basics.html#css-styles)
:::


## {background-iframe="demo/html.html" visibility="uncounted"}

## Un choix de thèmes disponibles...

::: columns
::: {.column width="49%"}

```{.yaml}
---
title: "Thème Bootswatch"
format: 
  html:
    theme: lux
---
```
:::
::: {.column width="2%"}
:::
::: {.column width="49%"}
```{.yaml}
---
title: "Pas de thème"
format: 
  html:
    theme: none
---
```
:::
:::

::: {.top-pad .bottom-pad}
* Inclusions de ~25 thèmes [Bootswatch](https://bootswatch.com/)
* Similaire à R Markdown avec **bslib**
:::

::: footer
[Thèmes Bootwatch](https://quarto.org/docs/output-formats/html-themes.html#overview)
:::

## {background-iframe="demo/html-bootswatch.html" visibility="uncounted"}

## ...facilement personnalisable !

::: columns
::: {.column width="49%"}
```{.yaml}
---
title: "Thème modifié"
format: 
  html:
    theme: lux
    fontsize: 1.1em #<1>
    linestretch: 1.7 #<2>
---
```
:::
::: {.column width="2%"}
:::
::: {.column width="49%"}
```{.yaml}
---
title: "Mode Clair / Sombre"
format: 
  html:
    theme:
      dark: darkly
      light: flatly
---
```
:::
:::

::: {.top-pad .bottom-pad}
Des configurations simplifiés par YAML: 

* Valeur pour des variables CSS
* Thèmes Clair et Sombre  
:::

::: footer
[YAML configuration](https://quarto.org/docs/output-formats/html-themes.html#basic-options) / [Dark mode](https://quarto.org/docs/output-formats/html-themes.html#dark-mode)
:::

## {background-iframe="demo/html-bootswatch-dark.html" visibility="uncounted"}

## Aller plus loin dans la personnalisation ! 

### Quarto themes, _powered by SASS_

::: columns

::: {.column width=40%}

```{.yaml}
theme:
  - lux
  - perso.scss
```
:::
::: {.column width=20%}
:::
::: {.column width=40%}

```{.yaml}
theme: theme-perso.scss
```
:::
:::

Sass <https://sass-lang.com> est un langage d'extension CSS qui vous permet de créer des règles CSS de manière beaucoup plus souple.

Utilisé par Bootstrap et Reveal JS

![](https://sass-lang.com/assets/img/logos/logo-b6e1ef6e.svg){.absolute bottom=-10 right=80 width=20%}

::: footer
[Options de thèmes](https://quarto.org/docs/output-formats/html-themes.html#theme-options)
:::

## Fichier de Thème Quarto 

```{.scss filename="perso.scss" code-line-numbers="|1,6|2-3|4,9|7-10"}
/*-- scss:defaults --*/ 
$h2-font-size:          1.6rem !default;
$headings-font-weight:  500 !default;
$custom-color: blue;

/*-- scss:rules --*/
h1, h2, h3, h4, h5, h6 {
  text-shadow: -1px -1px 0 rgba(0, 0, 0, .3);
  color: $custom-color;
}
```

Il est ainsi possible d'accéder à toutes les variables Bootstrap, et aux variables spécifiques Quarto 

::: footer
[Bootstrap SASS variables](https://github.com/twbs/bootstrap/blob/main/scss/_variables.scss) / [Quarto SASS variables](https://quarto.org/docs/output-formats/html-themes.html#sass-variables)
:::

## Comprendre le mécanisme {.smaller}

### Une simplication par rapport à une utilise basique de SASS

- Un [unique fichier]{.hl} pour appliquer son thème (SASS de base en demanderait plusieurs)

- [Décorateurs de région]{.hl} pour définir les sections (`functions`, `defaults`, `mixins`, and `rules`)

- Superposition des sections en fonction de leur type pour intégration avec autres configuration (Bootstrap)

- Résolution des fonctionnalité SASS `@use` ou `@import` en relatif au thème Quarto

Voir [l'article spéciale de la documentation](https://quarto.org/docs/output-formats/html-themes-more.html#bootstrap-bootswatch-layering) pour comprendre le mécanime de superpositon des sections.

::: footer
[Quarto Themes Design](https://quarto.org/docs/output-formats/html-themes-more.html)
:::

## A retenir

- Format HTML basée sur Bootstrap 5

- Différents niveaux de personnalisations sont possibles

- Intégration avec SASS via un fichier de thème unique

- Permet une réutilisation simple des thèmes pour tous les formats HTML (documents, site web, blog, ...)

- Permet un partage simplifier des thèmes entre utilisateurs  
  (via le mécanisme d'Extension [Custom Format](https://quarto.org/docs/extensions/formats.html))

::: aside
**Pour s'inspirer**: [Gallerie Quarto](https://quarto.org/docs/gallery/)  
**Exemple de thème communautaire**:  [Bookup](https://github.com/juba/bookup-html) [by Julien Barnier ([@juba](https://github.com/juba))]{.make-smaller}  
Thèmes clair et sombre basés sur la famille de police Roboto
::: 

# Des questions ?

Merci! 

::: {.make-smaller}

{{< fa tv >}} <https://cderv.github.io/rr-2023-quarto-html-theming/> 

{{< fa brands github >}} <https://github.com/cderv/rr-2023-quarto-html-theming>

:::